Sem s_espera = 0								//Semáforo para barrera.
Sem mutex_elegir = 1						//Para controlar acceso a la eleccion de tarea.
//Sem mutex_arreglo_cant = 1			//Para controlar acceso al contador.
Sem s_contador = 1
Sem s_tareas = 1								//Para controlar acceso al contador de tareas totales.
Array cant_tareas_emp [1..E] = 0
int contador = 0
int tareas = 0


process Empleado[i=1..E] {
	
	//Inicio con la barrera, cuando van llegando los empleados:
	P(s_contador)
	contador++
	if (contador < E)
		V(s_contador)
		P(s_espera)				//Espera a que llegue el resto del grupo, comienza la barrera.
	else
		for (j = 1 to E - 1)
			V(s_espera)			//Se libera la barrera.
		contador = 0
		V(s_contador)
	//Se finaliza la barrera, a partir de ahora se lleva a cabo tareas concurrente:

	while (tareas < T)
		//Cada uno toma su tarea:
		P(mutex_elegir)
		tomar_tarea()				//Se le asigna una tarea al empleado.
		V(mutex_elegir)
		
		"Llevar a cabo su tarea."	//Se realiza la tarea que le corresponde al trabajador.
		delay(random())

		P(s_tareas)
		tareas++					//Incremento la cantidad de tareas totales realizadas.
		V(s_tareas)
		cant_tareas_emp[i]++		//Incremento la cantidad de tareas realizadas por el empleado.

		//Cómo debo finalizar el proceso una vez que se llegaron a las T tareas realizadas? 
		//Necesito una nueva barrera? Y si me paso de la cantidad de tareas pedidas? Cómo modelo cuándo llegue al límite de tareas?
}


//Nota : cómo hago para modelar el final del día y la entrega del premio? Acaso necesito otro proceso 
//que modele a la fábrica y que se encargue de informar al ganador y cuándo se haya terminado el día?

//Cuando se lleva a cabo su tarea, necesito poner un delay tipo delay(random()) para modelar la espera
//o retraso de realización de la tarea.